package Editor;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.IOException;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.*;
import java.io.*;
import javax.swing.text.*;
import javax.swing.event.*;
import java_cup.runtime.Symbol;
import Analisis_Sintactico.*;
import javax.xml.bind.annotation.XmlElementRef;



//import javax.swing.tree.DefaultMutableTreeNode;
public class Editor extends javax.swing.JFrame {
    
    File arch;
    FileReader in;
    FileWriter out;
    //String path = "C:\\";
    String path;
    String dir;   
    boolean compilado=false;
    Driver dr;
     
    
    /** Creates new form Editor */
    public Editor() {
        initComponents();
        jTextArea1.addKeyListener(new KeyAdapter(){public void keyPressed(KeyEvent e){updateStatus(jTextArea1);jTextArea1.setCaretColor(Color.black);}});
        jTextArea1.addKeyListener(new KeyAdapter(){public void keyTyped   (KeyEvent e){updateStatus(jTextArea1);jTextArea1.setCaretColor(Color.black);}});
        jTextArea1.addKeyListener(new KeyAdapter(){public void keyReleased(KeyEvent e){updateStatus(jTextArea1);jTextArea1.setCaretColor(Color.black);}});
        jTextArea1.addMouseListener(new MouseAdapter(){public void mouseClicked(MouseEvent me){updateStatus(jTextArea1);jTextArea1.setCaretColor(Color.black);}});
        jTextArea1.addMouseListener(new MouseAdapter(){public void mousePressed(MouseEvent me){updateStatus(jTextArea1);jTextArea1.setCaretColor(Color.black);}});
        jTextArea1.addMouseListener(new MouseAdapter(){public void mouseEntered(MouseEvent me){updateStatus(jTextArea1);}});
        jTextArea1.addMouseListener(new MouseAdapter(){public void mouseExited  (MouseEvent me){updateStatus(jTextArea1);}});
        jTextArea1.addMouseListener(new MouseAdapter(){public void mouseReleased(MouseEvent me){updateStatus(jTextArea1);jTextArea1.setCaretColor(Color.black);}});
  }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compilador");
        setResizable(false);

        jButton1.setText("Compilar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Fila");

        jLabel2.setText("Columna");

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jButton3.setText("Abrir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(352, 352, 352))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(jTextArea1.getText().compareTo("")!=0){
         if(path==null)
             guardar();
        try{
         FileWriter  Guardx=new FileWriter(path);
         Guardx.write(jTextArea1.getText());
         Guardx.close(); //Cierra el fichero
         String str = jTextArea1.getText();
         char[] cbuf = new char[str.length()];
         str.getChars(0, str.length(), cbuf, 0);
         out = new FileWriter(path);                                            
         out.write(cbuf);
         out.close();

         jTextArea2.setText("");
         dr = new Driver(path);
         jTextArea2.setText(jTextArea2.getText()+"Iniciando proceso de compilaci√≥n...... \n");         
         jTextArea2.setText(jTextArea2.getText()+"Analisis sintactico completado \n");
         


         compilado=true;
   
       }
        catch(NullPointerException e)
        {
         jTextArea2.setText(jTextArea2.getText()+"Ocurrio un error en la compilaci√≥n \n");
         ImprimirError("Faltan datos en su codigo");
        }
       catch(Exception e)
       {
         jTextArea2.setText(jTextArea2.getText()+"Ocurrio un error en la compilaci√≥n \n");
         jTextArea2.setText(jTextArea2.getText()+e.getMessage());
       }
     }
     else
        ImprimirError("Digite el c√≥digo que desea compilar");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jFileChooser1.addChoosableFileFilter(new MyFilter());
        jFileChooser1.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooser1.setCurrentDirectory(jFileChooser1.getCurrentDirectory());
        int opc = jFileChooser1.showOpenDialog(this);
           if (!(opc == JFileChooser.CANCEL_OPTION)) {
            try {
                arch = jFileChooser1.getSelectedFile();
                path = arch.getAbsolutePath();
                dir=arch.getPath().replace(arch.getName(), "");
                in = new FileReader(arch);
                char[] cbuf = new char[(int) arch.length()];
                arch = null;
                in.read(cbuf);
                in.close();
                String str = "";
                for (int i = 0; i < cbuf.length; i++) {
                    str += cbuf[i];
                }
                jTextArea1.setText(str);
                jTextArea2.setText("");
                compilado=false;
            } catch (Exception ex) {
                Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_jButton3ActionPerformed
   
        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
               if(jTextArea1.getText().equals(""))
           ImprimirError("Digite el c√≥digo que desea guardar");
        else{
            if(path==null)
              guardar();
            else{
            try{
            FileWriter  Guardx=new FileWriter(path);
            Guardx.write(jTextArea1.getText());
            Guardx.close(); //Cierra el fichero
            String str = jTextArea1.getText();
            char[] cbuf = new char[str.length()];
            str.getChars(0, str.length(), cbuf, 0);
            out = new FileWriter(path);                                            
            out.write(cbuf);
            out.close();
            } 
            catch (IOException ex) {
            }}

      }
    }//GEN-LAST:event_jButton4ActionPerformed
    private void guardar(){
 try{
    JFileChooser fc=new JFileChooser(System.getProperty("user.dir"));
    fc.addChoosableFileFilter(new MyFilter());
    fc.showSaveDialog(this); //Muestra el di√°logo
    File Guardar =fc.getSelectedFile();
    if(Guardar !=null){
      FileWriter  Guardx=new FileWriter(Guardar+".java");
      Guardx.write(jTextArea1.getText());
      path = Guardar.getAbsolutePath();
      Guardx.close(); //Cierra el fichero
    }
 }
 
 catch(IOException ioe){
   System.out.println(ioe); //Muestra por consola los errores
 }
}

 class MyFilter extends javax.swing.filechooser.FileFilter {
  public boolean accept(File file) {
      if(file.isDirectory())
      {
      }
      else{
    String filename = file.getName();
    return filename.endsWith(".java");
      }
      return true;
  }
  public String getDescription() {
    return "*.java";
  }
} 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }
    
        public void updateStatus(JTextArea textArea1) {
        int pos =  jTextArea1.getCaretPosition();
        Element map = jTextArea1.getDocument().getDefaultRootElement();
        int currLine = map.getElementIndex(pos);
        
        Element lineElement = map.getElement(currLine);
        int start = lineElement.getStartOffset();
        int end = lineElement.getEndOffset();
        int numLines = map.getElementCount();
        
        /*NUMERO DE COLUMNA*/
        jLabel4.setText(new StringBuffer().append(pos - start).append(" / ")
        .append((end - start)-1).toString());
        
        /*NUMERO DE LINEA*/
        jLabel3.setText(new StringBuffer().append(currLine).append(" / ")
        .append(numLines-1).toString());
        
    }
    public void ImprimirError(String x)
    {
    javax.swing.JOptionPane pane = new javax.swing.JOptionPane();
    javax.swing.JTextPane panel = new javax.swing.JTextPane();
    panel.setText(x);
    panel.setEnabled(false); 
    panel.setBackground(new java.awt.Color(104,104,104));
    pane.setMessage(panel); 
    pane.setMessageType(pane.QUESTION_MESSAGE);
    Object[] options = { "Volver" };
    pane.setOptions(options);
    javax.swing.JDialog dialog = pane.createDialog(null, "");
    dialog.show();
    Object selectedValue = pane.getValue();
    if(String.valueOf(selectedValue) == ""){
    }
    }

    
    public void guardar(String dir, String cont){
        try{
            File mmm = new File(dir);
            mmm.createNewFile();
            BufferedWriter lol = new BufferedWriter(new FileWriter(mmm));
            lol.write(cont);
            lol.close();
        }
        catch(Exception e){}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
  
}
